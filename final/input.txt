fn main() {
  i32 arr[10];
  i32 n = 10;

  quicksort(arr, 0, n - 1);
  return;
}

fn quicksort(i32 arr, i32 low, i32 high) {
    if low < high {
      i32 pivot = 0;
      partition(arr, low, high);
      quicksort(arr, low, pivot - 1);
      quicksort(arr, pivot + 1, high);
    }
  }
  
fn partition(i32 arr, i32 low, i32 high) {
    i32 pivot = arr[low];
    i32 i = low;
  
    for j in (low+1)..high {
      if arr[j] < pivot {
        i = i + 1;
        i32 t1 = arr[i];
        i32 t2 = arr[j];
        arr[i] = t2;
        arr[j] = t1;
      }
    }

    i32 t1 = arr[i];
    i32 t2 = arr[low];
    arr[i] = t2;
    arr[low] = t1;

    i = i + 1;

    return;
 }
