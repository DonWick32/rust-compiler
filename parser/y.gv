// Generated by GNU Bison 3.8.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: • program $end\l  1 program: • entry '(' ')' '{' body return '}'\l  2 entry: • ID ID\l"]
  0 -> 1 [style=solid label="ID"]
  0 -> 2 [style=dashed label="program"]
  0 -> 3 [style=dashed label="entry"]
  1 [label="State 1\n\l  2 entry: ID • ID\l"]
  1 -> 4 [style=solid label="ID"]
  2 [label="State 2\n\l  0 $accept: program • $end\l"]
  2 -> 5 [style=solid label="$end"]
  3 [label="State 3\n\l  1 program: entry • '(' ')' '{' body return '}'\l"]
  3 -> 6 [style=solid label="'('"]
  4 [label="State 4\n\l  2 entry: ID ID •\l"]
  4 -> "4R2" [style=solid]
 "4R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l  0 $accept: program $end •\l"]
  5 -> "5R0" [style=solid]
 "5R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  6 [label="State 6\n\l  1 program: entry '(' • ')' '{' body return '}'\l"]
  6 -> 7 [style=solid label="')'"]
  7 [label="State 7\n\l  1 program: entry '(' ')' • '{' body return '}'\l"]
  7 -> 8 [style=solid label="'{'"]
  8 [label="State 8\n\l  1 program: entry '(' ')' '{' • body return '}'\l  6 body: • block body\l  7     | • %empty\l  8 block: • WHILE '(' condition ')' '{' body '}'\l  9      | • IF '(' condition ')' '{' body '}' else\l 10      | • statement ';'\l 11      | • PRINTFF '(' STR ')' ';'\l 12      | • SCANFF '(' STR ',' '&' ID ')' ';'\l 18 statement: • DECLARE ID ':' datatype init\l 19          | • ID '=' expression\l 20          | • ID relop expression\l"]
  8 -> 9 [style=solid label="DECLARE"]
  8 -> 10 [style=solid label="PRINTFF"]
  8 -> 11 [style=solid label="SCANFF"]
  8 -> 12 [style=solid label="WHILE"]
  8 -> 13 [style=solid label="IF"]
  8 -> 14 [style=solid label="ID"]
  8 -> 15 [style=dashed label="body"]
  8 -> 16 [style=dashed label="block"]
  8 -> 17 [style=dashed label="statement"]
  8 -> "8R7" [style=solid]
 "8R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l 18 statement: DECLARE • ID ':' datatype init\l"]
  9 -> 18 [style=solid label="ID"]
  10 [label="State 10\n\l 11 block: PRINTFF • '(' STR ')' ';'\l"]
  10 -> 19 [style=solid label="'('"]
  11 [label="State 11\n\l 12 block: SCANFF • '(' STR ',' '&' ID ')' ';'\l"]
  11 -> 20 [style=solid label="'('"]
  12 [label="State 12\n\l  8 block: WHILE • '(' condition ')' '{' body '}'\l"]
  12 -> 21 [style=solid label="'('"]
  13 [label="State 13\n\l  9 block: IF • '(' condition ')' '{' body '}' else\l"]
  13 -> 22 [style=solid label="'('"]
  14 [label="State 14\n\l 19 statement: ID • '=' expression\l 20          | ID • relop expression\l 37 relop: • LT\l 38      | • GT\l 39      | • LE\l 40      | • GE\l 41      | • EQ\l 42      | • NE\l"]
  14 -> 23 [style=solid label="LE"]
  14 -> 24 [style=solid label="GE"]
  14 -> 25 [style=solid label="EQ"]
  14 -> 26 [style=solid label="NE"]
  14 -> 27 [style=solid label="GT"]
  14 -> 28 [style=solid label="LT"]
  14 -> 29 [style=solid label="'='"]
  14 -> 30 [style=dashed label="relop"]
  15 [label="State 15\n\l  1 program: entry '(' ')' '{' body • return '}'\l 47 return: • RETURN value ';'\l 48       | • %empty\l"]
  15 -> 31 [style=solid label="RETURN"]
  15 -> 32 [style=dashed label="return"]
  15 -> "15R48" [style=solid]
 "15R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l  6 body: • block body\l  6     | block • body\l  7     | • %empty\l  8 block: • WHILE '(' condition ')' '{' body '}'\l  9      | • IF '(' condition ')' '{' body '}' else\l 10      | • statement ';'\l 11      | • PRINTFF '(' STR ')' ';'\l 12      | • SCANFF '(' STR ',' '&' ID ')' ';'\l 18 statement: • DECLARE ID ':' datatype init\l 19          | • ID '=' expression\l 20          | • ID relop expression\l"]
  16 -> 9 [style=solid label="DECLARE"]
  16 -> 10 [style=solid label="PRINTFF"]
  16 -> 11 [style=solid label="SCANFF"]
  16 -> 12 [style=solid label="WHILE"]
  16 -> 13 [style=solid label="IF"]
  16 -> 14 [style=solid label="ID"]
  16 -> 33 [style=dashed label="body"]
  16 -> 16 [style=dashed label="block"]
  16 -> 17 [style=dashed label="statement"]
  16 -> "16R7" [style=solid]
 "16R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l 10 block: statement • ';'\l"]
  17 -> 34 [style=solid label="';'"]
  18 [label="State 18\n\l 18 statement: DECLARE ID • ':' datatype init\l"]
  18 -> 35 [style=solid label="':'"]
  19 [label="State 19\n\l 11 block: PRINTFF '(' • STR ')' ';'\l"]
  19 -> 36 [style=solid label="STR"]
  20 [label="State 20\n\l 12 block: SCANFF '(' • STR ',' '&' ID ')' ';'\l"]
  20 -> 37 [style=solid label="STR"]
  21 [label="State 21\n\l  8 block: WHILE '(' • condition ')' '{' body '}'\l 15 condition: • value relop value\l 16          | • TRUE\l 17          | • FALSE\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l"]
  21 -> 38 [style=solid label="CHARACTER"]
  21 -> 39 [style=solid label="TRUE"]
  21 -> 40 [style=solid label="FALSE"]
  21 -> 41 [style=solid label="NUMBER"]
  21 -> 42 [style=solid label="FLOAT_NUM"]
  21 -> 43 [style=solid label="ID"]
  21 -> 44 [style=dashed label="condition"]
  21 -> 45 [style=dashed label="value"]
  22 [label="State 22\n\l  9 block: IF '(' • condition ')' '{' body '}' else\l 15 condition: • value relop value\l 16          | • TRUE\l 17          | • FALSE\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l"]
  22 -> 38 [style=solid label="CHARACTER"]
  22 -> 39 [style=solid label="TRUE"]
  22 -> 40 [style=solid label="FALSE"]
  22 -> 41 [style=solid label="NUMBER"]
  22 -> 42 [style=solid label="FLOAT_NUM"]
  22 -> 43 [style=solid label="ID"]
  22 -> 46 [style=dashed label="condition"]
  22 -> 45 [style=dashed label="value"]
  23 [label="State 23\n\l 39 relop: LE •\l"]
  23 -> "23R39" [style=solid]
 "23R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  24 [label="State 24\n\l 40 relop: GE •\l"]
  24 -> "24R40" [style=solid]
 "24R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 41 relop: EQ •\l"]
  25 -> "25R41" [style=solid]
 "25R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l 42 relop: NE •\l"]
  26 -> "26R42" [style=solid]
 "26R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 38 relop: GT •\l"]
  27 -> "27R38" [style=solid]
 "27R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 37 relop: LT •\l"]
  28 -> "28R37" [style=solid]
 "28R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  29 [label="State 29\n\l 19 statement: ID '=' • expression\l 23 expression: • expression addops term\l 24           | • term\l 25 term: • term mulops factor\l 26     | • factor\l 27 factor: • base exponent base\l 28       | • LOG '(' value ',' value ')'\l 29       | • base\l 30 base: • value\l 31     | • '(' expression ')'\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l"]
  29 -> 38 [style=solid label="CHARACTER"]
  29 -> 41 [style=solid label="NUMBER"]
  29 -> 42 [style=solid label="FLOAT_NUM"]
  29 -> 43 [style=solid label="ID"]
  29 -> 47 [style=solid label="LOG"]
  29 -> 48 [style=solid label="'('"]
  29 -> 49 [style=dashed label="expression"]
  29 -> 50 [style=dashed label="term"]
  29 -> 51 [style=dashed label="factor"]
  29 -> 52 [style=dashed label="base"]
  29 -> 53 [style=dashed label="value"]
  30 [label="State 30\n\l 20 statement: ID relop • expression\l 23 expression: • expression addops term\l 24           | • term\l 25 term: • term mulops factor\l 26     | • factor\l 27 factor: • base exponent base\l 28       | • LOG '(' value ',' value ')'\l 29       | • base\l 30 base: • value\l 31     | • '(' expression ')'\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l"]
  30 -> 38 [style=solid label="CHARACTER"]
  30 -> 41 [style=solid label="NUMBER"]
  30 -> 42 [style=solid label="FLOAT_NUM"]
  30 -> 43 [style=solid label="ID"]
  30 -> 47 [style=solid label="LOG"]
  30 -> 48 [style=solid label="'('"]
  30 -> 54 [style=dashed label="expression"]
  30 -> 50 [style=dashed label="term"]
  30 -> 51 [style=dashed label="factor"]
  30 -> 52 [style=dashed label="base"]
  30 -> 53 [style=dashed label="value"]
  31 [label="State 31\n\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l 47 return: RETURN • value ';'\l"]
  31 -> 38 [style=solid label="CHARACTER"]
  31 -> 41 [style=solid label="NUMBER"]
  31 -> 42 [style=solid label="FLOAT_NUM"]
  31 -> 43 [style=solid label="ID"]
  31 -> 55 [style=dashed label="value"]
  32 [label="State 32\n\l  1 program: entry '(' ')' '{' body return • '}'\l"]
  32 -> 56 [style=solid label="'}'"]
  33 [label="State 33\n\l  6 body: block body •\l"]
  33 -> "33R6" [style=solid]
 "33R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l 10 block: statement ';' •\l"]
  34 -> "34R10" [style=solid]
 "34R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l  3 datatype: • INT\l  4         | • FLOAT\l  5         | • CHAR\l 18 statement: DECLARE ID ':' • datatype init\l"]
  35 -> 57 [style=solid label="INT"]
  35 -> 58 [style=solid label="FLOAT"]
  35 -> 59 [style=solid label="CHAR"]
  35 -> 60 [style=dashed label="datatype"]
  36 [label="State 36\n\l 11 block: PRINTFF '(' STR • ')' ';'\l"]
  36 -> 61 [style=solid label="')'"]
  37 [label="State 37\n\l 12 block: SCANFF '(' STR • ',' '&' ID ')' ';'\l"]
  37 -> 62 [style=solid label="','"]
  38 [label="State 38\n\l 45 value: CHARACTER •\l"]
  38 -> "38R45" [style=solid]
 "38R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 16 condition: TRUE •\l"]
  39 -> "39R16" [style=solid]
 "39R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  40 [label="State 40\n\l 17 condition: FALSE •\l"]
  40 -> "40R17" [style=solid]
 "40R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 43 value: NUMBER •\l"]
  41 -> "41R43" [style=solid]
 "41R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l 44 value: FLOAT_NUM •\l"]
  42 -> "42R44" [style=solid]
 "42R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l 46 value: ID •\l"]
  43 -> "43R46" [style=solid]
 "43R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l  8 block: WHILE '(' condition • ')' '{' body '}'\l"]
  44 -> 63 [style=solid label="')'"]
  45 [label="State 45\n\l 15 condition: value • relop value\l 37 relop: • LT\l 38      | • GT\l 39      | • LE\l 40      | • GE\l 41      | • EQ\l 42      | • NE\l"]
  45 -> 23 [style=solid label="LE"]
  45 -> 24 [style=solid label="GE"]
  45 -> 25 [style=solid label="EQ"]
  45 -> 26 [style=solid label="NE"]
  45 -> 27 [style=solid label="GT"]
  45 -> 28 [style=solid label="LT"]
  45 -> 64 [style=dashed label="relop"]
  46 [label="State 46\n\l  9 block: IF '(' condition • ')' '{' body '}' else\l"]
  46 -> 65 [style=solid label="')'"]
  47 [label="State 47\n\l 28 factor: LOG • '(' value ',' value ')'\l"]
  47 -> 66 [style=solid label="'('"]
  48 [label="State 48\n\l 23 expression: • expression addops term\l 24           | • term\l 25 term: • term mulops factor\l 26     | • factor\l 27 factor: • base exponent base\l 28       | • LOG '(' value ',' value ')'\l 29       | • base\l 30 base: • value\l 31     | • '(' expression ')'\l 31     | '(' • expression ')'\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l"]
  48 -> 38 [style=solid label="CHARACTER"]
  48 -> 41 [style=solid label="NUMBER"]
  48 -> 42 [style=solid label="FLOAT_NUM"]
  48 -> 43 [style=solid label="ID"]
  48 -> 47 [style=solid label="LOG"]
  48 -> 48 [style=solid label="'('"]
  48 -> 67 [style=dashed label="expression"]
  48 -> 50 [style=dashed label="term"]
  48 -> 51 [style=dashed label="factor"]
  48 -> 52 [style=dashed label="base"]
  48 -> 53 [style=dashed label="value"]
  49 [label="State 49\n\l 19 statement: ID '=' expression •\l 23 expression: expression • addops term\l 35 addops: • ADD\l 36       | • SUB\l"]
  49 -> 68 [style=solid label="ADD"]
  49 -> 69 [style=solid label="SUB"]
  49 -> 70 [style=dashed label="addops"]
  49 -> "49R19" [style=solid]
 "49R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  50 [label="State 50\n\l 24 expression: term •\l 25 term: term • mulops factor\l 33 mulops: • MULT\l 34       | • DIV\l"]
  50 -> 71 [style=solid label="MULT"]
  50 -> 72 [style=solid label="DIV"]
  50 -> 73 [style=dashed label="mulops"]
  50 -> "50R24" [style=solid]
 "50R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l 26 term: factor •\l"]
  51 -> "51R26" [style=solid]
 "51R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 27 factor: base • exponent base\l 29       | base •\l 32 exponent: • POW\l"]
  52 -> 74 [style=solid label="POW"]
  52 -> 75 [style=dashed label="exponent"]
  52 -> "52R29" [style=solid]
 "52R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 30 base: value •\l"]
  53 -> "53R30" [style=solid]
 "53R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l 20 statement: ID relop expression •\l 23 expression: expression • addops term\l 35 addops: • ADD\l 36       | • SUB\l"]
  54 -> 68 [style=solid label="ADD"]
  54 -> 69 [style=solid label="SUB"]
  54 -> 70 [style=dashed label="addops"]
  54 -> "54R20" [style=solid]
 "54R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l 47 return: RETURN value • ';'\l"]
  55 -> 76 [style=solid label="';'"]
  56 [label="State 56\n\l  1 program: entry '(' ')' '{' body return '}' •\l"]
  56 -> "56R1" [style=solid]
 "56R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l  3 datatype: INT •\l"]
  57 -> "57R3" [style=solid]
 "57R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  58 [label="State 58\n\l  4 datatype: FLOAT •\l"]
  58 -> "58R4" [style=solid]
 "58R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l  5 datatype: CHAR •\l"]
  59 -> "59R5" [style=solid]
 "59R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l 18 statement: DECLARE ID ':' datatype • init\l 21 init: • '=' value\l 22     | • %empty\l"]
  60 -> 77 [style=solid label="'='"]
  60 -> 78 [style=dashed label="init"]
  60 -> "60R22" [style=solid]
 "60R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 11 block: PRINTFF '(' STR ')' • ';'\l"]
  61 -> 79 [style=solid label="';'"]
  62 [label="State 62\n\l 12 block: SCANFF '(' STR ',' • '&' ID ')' ';'\l"]
  62 -> 80 [style=solid label="'&'"]
  63 [label="State 63\n\l  8 block: WHILE '(' condition ')' • '{' body '}'\l"]
  63 -> 81 [style=solid label="'{'"]
  64 [label="State 64\n\l 15 condition: value relop • value\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l"]
  64 -> 38 [style=solid label="CHARACTER"]
  64 -> 41 [style=solid label="NUMBER"]
  64 -> 42 [style=solid label="FLOAT_NUM"]
  64 -> 43 [style=solid label="ID"]
  64 -> 82 [style=dashed label="value"]
  65 [label="State 65\n\l  9 block: IF '(' condition ')' • '{' body '}' else\l"]
  65 -> 83 [style=solid label="'{'"]
  66 [label="State 66\n\l 28 factor: LOG '(' • value ',' value ')'\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l"]
  66 -> 38 [style=solid label="CHARACTER"]
  66 -> 41 [style=solid label="NUMBER"]
  66 -> 42 [style=solid label="FLOAT_NUM"]
  66 -> 43 [style=solid label="ID"]
  66 -> 84 [style=dashed label="value"]
  67 [label="State 67\n\l 23 expression: expression • addops term\l 31 base: '(' expression • ')'\l 35 addops: • ADD\l 36       | • SUB\l"]
  67 -> 68 [style=solid label="ADD"]
  67 -> 69 [style=solid label="SUB"]
  67 -> 85 [style=solid label="')'"]
  67 -> 70 [style=dashed label="addops"]
  68 [label="State 68\n\l 35 addops: ADD •\l"]
  68 -> "68R35" [style=solid]
 "68R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l 36 addops: SUB •\l"]
  69 -> "69R36" [style=solid]
 "69R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 23 expression: expression addops • term\l 25 term: • term mulops factor\l 26     | • factor\l 27 factor: • base exponent base\l 28       | • LOG '(' value ',' value ')'\l 29       | • base\l 30 base: • value\l 31     | • '(' expression ')'\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l"]
  70 -> 38 [style=solid label="CHARACTER"]
  70 -> 41 [style=solid label="NUMBER"]
  70 -> 42 [style=solid label="FLOAT_NUM"]
  70 -> 43 [style=solid label="ID"]
  70 -> 47 [style=solid label="LOG"]
  70 -> 48 [style=solid label="'('"]
  70 -> 86 [style=dashed label="term"]
  70 -> 51 [style=dashed label="factor"]
  70 -> 52 [style=dashed label="base"]
  70 -> 53 [style=dashed label="value"]
  71 [label="State 71\n\l 33 mulops: MULT •\l"]
  71 -> "71R33" [style=solid]
 "71R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 34 mulops: DIV •\l"]
  72 -> "72R34" [style=solid]
 "72R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 25 term: term mulops • factor\l 27 factor: • base exponent base\l 28       | • LOG '(' value ',' value ')'\l 29       | • base\l 30 base: • value\l 31     | • '(' expression ')'\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l"]
  73 -> 38 [style=solid label="CHARACTER"]
  73 -> 41 [style=solid label="NUMBER"]
  73 -> 42 [style=solid label="FLOAT_NUM"]
  73 -> 43 [style=solid label="ID"]
  73 -> 47 [style=solid label="LOG"]
  73 -> 48 [style=solid label="'('"]
  73 -> 87 [style=dashed label="factor"]
  73 -> 52 [style=dashed label="base"]
  73 -> 53 [style=dashed label="value"]
  74 [label="State 74\n\l 32 exponent: POW •\l"]
  74 -> "74R32" [style=solid]
 "74R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 27 factor: base exponent • base\l 30 base: • value\l 31     | • '(' expression ')'\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l"]
  75 -> 38 [style=solid label="CHARACTER"]
  75 -> 41 [style=solid label="NUMBER"]
  75 -> 42 [style=solid label="FLOAT_NUM"]
  75 -> 43 [style=solid label="ID"]
  75 -> 48 [style=solid label="'('"]
  75 -> 88 [style=dashed label="base"]
  75 -> 53 [style=dashed label="value"]
  76 [label="State 76\n\l 47 return: RETURN value ';' •\l"]
  76 -> "76R47" [style=solid]
 "76R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 21 init: '=' • value\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l"]
  77 -> 38 [style=solid label="CHARACTER"]
  77 -> 41 [style=solid label="NUMBER"]
  77 -> 42 [style=solid label="FLOAT_NUM"]
  77 -> 43 [style=solid label="ID"]
  77 -> 89 [style=dashed label="value"]
  78 [label="State 78\n\l 18 statement: DECLARE ID ':' datatype init •\l"]
  78 -> "78R18" [style=solid]
 "78R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l 11 block: PRINTFF '(' STR ')' ';' •\l"]
  79 -> "79R11" [style=solid]
 "79R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 12 block: SCANFF '(' STR ',' '&' • ID ')' ';'\l"]
  80 -> 90 [style=solid label="ID"]
  81 [label="State 81\n\l  6 body: • block body\l  7     | • %empty\l  8 block: • WHILE '(' condition ')' '{' body '}'\l  8      | WHILE '(' condition ')' '{' • body '}'\l  9      | • IF '(' condition ')' '{' body '}' else\l 10      | • statement ';'\l 11      | • PRINTFF '(' STR ')' ';'\l 12      | • SCANFF '(' STR ',' '&' ID ')' ';'\l 18 statement: • DECLARE ID ':' datatype init\l 19          | • ID '=' expression\l 20          | • ID relop expression\l"]
  81 -> 9 [style=solid label="DECLARE"]
  81 -> 10 [style=solid label="PRINTFF"]
  81 -> 11 [style=solid label="SCANFF"]
  81 -> 12 [style=solid label="WHILE"]
  81 -> 13 [style=solid label="IF"]
  81 -> 14 [style=solid label="ID"]
  81 -> 91 [style=dashed label="body"]
  81 -> 16 [style=dashed label="block"]
  81 -> 17 [style=dashed label="statement"]
  81 -> "81R7" [style=solid]
 "81R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l 15 condition: value relop value •\l"]
  82 -> "82R15" [style=solid]
 "82R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l  6 body: • block body\l  7     | • %empty\l  8 block: • WHILE '(' condition ')' '{' body '}'\l  9      | • IF '(' condition ')' '{' body '}' else\l  9      | IF '(' condition ')' '{' • body '}' else\l 10      | • statement ';'\l 11      | • PRINTFF '(' STR ')' ';'\l 12      | • SCANFF '(' STR ',' '&' ID ')' ';'\l 18 statement: • DECLARE ID ':' datatype init\l 19          | • ID '=' expression\l 20          | • ID relop expression\l"]
  83 -> 9 [style=solid label="DECLARE"]
  83 -> 10 [style=solid label="PRINTFF"]
  83 -> 11 [style=solid label="SCANFF"]
  83 -> 12 [style=solid label="WHILE"]
  83 -> 13 [style=solid label="IF"]
  83 -> 14 [style=solid label="ID"]
  83 -> 92 [style=dashed label="body"]
  83 -> 16 [style=dashed label="block"]
  83 -> 17 [style=dashed label="statement"]
  83 -> "83R7" [style=solid]
 "83R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l 28 factor: LOG '(' value • ',' value ')'\l"]
  84 -> 93 [style=solid label="','"]
  85 [label="State 85\n\l 31 base: '(' expression ')' •\l"]
  85 -> "85R31" [style=solid]
 "85R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l 23 expression: expression addops term •\l 25 term: term • mulops factor\l 33 mulops: • MULT\l 34       | • DIV\l"]
  86 -> 71 [style=solid label="MULT"]
  86 -> 72 [style=solid label="DIV"]
  86 -> 73 [style=dashed label="mulops"]
  86 -> "86R23" [style=solid]
 "86R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l 25 term: term mulops factor •\l"]
  87 -> "87R25" [style=solid]
 "87R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l 27 factor: base exponent base •\l"]
  88 -> "88R27" [style=solid]
 "88R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l 21 init: '=' value •\l"]
  89 -> "89R21" [style=solid]
 "89R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  90 [label="State 90\n\l 12 block: SCANFF '(' STR ',' '&' ID • ')' ';'\l"]
  90 -> 94 [style=solid label="')'"]
  91 [label="State 91\n\l  8 block: WHILE '(' condition ')' '{' body • '}'\l"]
  91 -> 95 [style=solid label="'}'"]
  92 [label="State 92\n\l  9 block: IF '(' condition ')' '{' body • '}' else\l"]
  92 -> 96 [style=solid label="'}'"]
  93 [label="State 93\n\l 28 factor: LOG '(' value ',' • value ')'\l 43 value: • NUMBER\l 44      | • FLOAT_NUM\l 45      | • CHARACTER\l 46      | • ID\l"]
  93 -> 38 [style=solid label="CHARACTER"]
  93 -> 41 [style=solid label="NUMBER"]
  93 -> 42 [style=solid label="FLOAT_NUM"]
  93 -> 43 [style=solid label="ID"]
  93 -> 97 [style=dashed label="value"]
  94 [label="State 94\n\l 12 block: SCANFF '(' STR ',' '&' ID ')' • ';'\l"]
  94 -> 98 [style=solid label="';'"]
  95 [label="State 95\n\l  8 block: WHILE '(' condition ')' '{' body '}' •\l"]
  95 -> "95R8" [style=solid]
 "95R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l  9 block: IF '(' condition ')' '{' body '}' • else\l 13 else: • ELSE '{' body '}'\l 14     | • %empty\l"]
  96 -> 99 [style=solid label="ELSE"]
  96 -> 100 [style=dashed label="else"]
  96 -> "96R14" [style=solid]
 "96R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l 28 factor: LOG '(' value ',' value • ')'\l"]
  97 -> 101 [style=solid label="')'"]
  98 [label="State 98\n\l 12 block: SCANFF '(' STR ',' '&' ID ')' ';' •\l"]
  98 -> "98R12" [style=solid]
 "98R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l 13 else: ELSE • '{' body '}'\l"]
  99 -> 102 [style=solid label="'{'"]
  100 [label="State 100\n\l  9 block: IF '(' condition ')' '{' body '}' else •\l"]
  100 -> "100R9" [style=solid]
 "100R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l 28 factor: LOG '(' value ',' value ')' •\l"]
  101 -> "101R28" [style=solid]
 "101R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l  6 body: • block body\l  7     | • %empty\l  8 block: • WHILE '(' condition ')' '{' body '}'\l  9      | • IF '(' condition ')' '{' body '}' else\l 10      | • statement ';'\l 11      | • PRINTFF '(' STR ')' ';'\l 12      | • SCANFF '(' STR ',' '&' ID ')' ';'\l 13 else: ELSE '{' • body '}'\l 18 statement: • DECLARE ID ':' datatype init\l 19          | • ID '=' expression\l 20          | • ID relop expression\l"]
  102 -> 9 [style=solid label="DECLARE"]
  102 -> 10 [style=solid label="PRINTFF"]
  102 -> 11 [style=solid label="SCANFF"]
  102 -> 12 [style=solid label="WHILE"]
  102 -> 13 [style=solid label="IF"]
  102 -> 14 [style=solid label="ID"]
  102 -> 103 [style=dashed label="body"]
  102 -> 16 [style=dashed label="block"]
  102 -> 17 [style=dashed label="statement"]
  102 -> "102R7" [style=solid]
 "102R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  103 [label="State 103\n\l 13 else: ELSE '{' body • '}'\l"]
  103 -> 104 [style=solid label="'}'"]
  104 [label="State 104\n\l 13 else: ELSE '{' body '}' •\l"]
  104 -> "104R13" [style=solid]
 "104R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
}
