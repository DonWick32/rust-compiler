Terminals unused in grammar

    AND
    OR


State 32 conflicts: 10 shift/reduce
State 85 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main '(' ')' '{' body return '}'

    2 main: ID ID

    3 datatype: INT
    4         | FLOAT
    5         | CHAR
    6         | VOID

    7 $@1: ε

    8 body: FOR $@1 '(' statement ';' condition ';' statement ')' '{' body '}'

    9 $@2: ε

   10 body: IF $@2 '(' condition ')' '{' body '}' else
   11     | statement ';'
   12     | body body

   13 $@3: ε

   14 body: PRINTFF $@3 '(' STR ')' ';'

   15 $@4: ε

   16 body: SCANFF $@4 '(' STR ',' '&' ID ')' ';'

   17 $@5: ε

   18 else: ELSE $@5 '{' body '}'
   19     | ε

   20 condition: value relop value
   21          | TRUE
   22          | FALSE
   23          | ε

   24 $@6: ε

   25 statement: datatype ID $@6 init

   26 $@7: ε

   27 statement: ID $@7 '=' expression

   28 $@8: ε

   29 statement: ID $@8 relop expression

   30 $@9: ε

   31 statement: ID $@9 UNARY
   32          | UNARY ID

   33 init: '=' value
   34     | ε

   35 expression: expression arithmetic expression
   36           | value

   37 arithmetic: ADD
   38           | SUBTRACT
   39           | MULTIPLY
   40           | DIVIDE

   41 relop: LT
   42      | GT
   43      | LE
   44      | GE
   45      | EQ
   46      | NE

   47 value: NUMBER
   48      | FLOAT_NUM
   49      | CHARACTER
   50      | ID

   51 $@10: ε

   52 return: RETURN $@10 value ';'
   53       | ε


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 16
    '(' (40) 1 8 10 14 16
    ')' (41) 1 8 10 14 16
    ',' (44) 16
    ';' (59) 8 11 14 16 52
    '=' (61) 27 33
    '{' (123) 1 8 10 18
    '}' (125) 1 8 10 18
    error (256)
    VOID (258) 6
    CHARACTER <nd_obj> (259) 49
    PRINTFF <nd_obj> (260) 14
    SCANFF <nd_obj> (261) 16
    INT <nd_obj> (262) 3
    FLOAT <nd_obj> (263) 4
    CHAR <nd_obj> (264) 5
    FOR <nd_obj> (265) 8
    IF <nd_obj> (266) 10
    ELSE <nd_obj> (267) 18
    TRUE <nd_obj> (268) 21
    FALSE <nd_obj> (269) 22
    NUMBER <nd_obj> (270) 47
    FLOAT_NUM <nd_obj> (271) 48
    ID <nd_obj> (272) 2 16 25 27 29 31 32 50
    LE <nd_obj> (273) 43
    GE <nd_obj> (274) 44
    EQ <nd_obj> (275) 45
    NE <nd_obj> (276) 46
    GT <nd_obj> (277) 42
    LT <nd_obj> (278) 41
    AND <nd_obj> (279)
    OR <nd_obj> (280)
    STR <nd_obj> (281) 14 16
    ADD <nd_obj> (282) 37
    MULTIPLY <nd_obj> (283) 39
    DIVIDE <nd_obj> (284) 40
    SUBTRACT <nd_obj> (285) 38
    UNARY <nd_obj> (286) 31 32
    RETURN <nd_obj> (287) 52


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program <nd_obj> (42)
        on left: 1
        on right: 0
    main <nd_obj> (43)
        on left: 2
        on right: 1
    datatype <nd_obj> (44)
        on left: 3 4 5 6
        on right: 25
    body <nd_obj> (45)
        on left: 8 10 11 12 14 16
        on right: 1 8 10 12 18
    $@1 (46)
        on left: 7
        on right: 8
    $@2 (47)
        on left: 9
        on right: 10
    $@3 (48)
        on left: 13
        on right: 14
    $@4 (49)
        on left: 15
        on right: 16
    else <nd_obj> (50)
        on left: 18 19
        on right: 10
    $@5 (51)
        on left: 17
        on right: 18
    condition <nd_obj> (52)
        on left: 20 21 22 23
        on right: 8 10
    statement <nd_obj> (53)
        on left: 25 27 29 31 32
        on right: 8 11
    $@6 (54)
        on left: 24
        on right: 25
    $@7 (55)
        on left: 26
        on right: 27
    $@8 (56)
        on left: 28
        on right: 29
    $@9 (57)
        on left: 30
        on right: 31
    init <nd_obj2> (58)
        on left: 33 34
        on right: 25
    expression <nd_obj2> (59)
        on left: 35 36
        on right: 27 29 35
    arithmetic <nd_obj> (60)
        on left: 37 38 39 40
        on right: 35
    relop <nd_obj> (61)
        on left: 41 42 43 44 45 46
        on right: 20 29
    value <nd_obj2> (62)
        on left: 47 48 49 50
        on right: 20 33 36 52
    return <nd_obj> (63)
        on left: 52 53
        on right: 1
    $@10 (64)
        on left: 51
        on right: 52


State 0

    0 $accept: • program $end

    ID  shift, and go to state 1

    program  go to state 2
    main     go to state 3


State 1

    2 main: ID • ID

    ID  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: main • '(' ')' '{' body return '}'

    '('  shift, and go to state 6


State 4

    2 main: ID ID •

    $default  reduce using rule 2 (main)


State 5

    0 $accept: program $end •

    $default  accept


State 6

    1 program: main '(' • ')' '{' body return '}'

    ')'  shift, and go to state 7


State 7

    1 program: main '(' ')' • '{' body return '}'

    '{'  shift, and go to state 8


State 8

    1 program: main '(' ')' '{' • body return '}'

    VOID     shift, and go to state 9
    PRINTFF  shift, and go to state 10
    SCANFF   shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    CHAR     shift, and go to state 14
    FOR      shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17
    UNARY    shift, and go to state 18

    datatype   go to state 19
    body       go to state 20
    statement  go to state 21


State 9

    6 datatype: VOID •

    $default  reduce using rule 6 (datatype)


State 10

   14 body: PRINTFF • $@3 '(' STR ')' ';'

    $default  reduce using rule 13 ($@3)

    $@3  go to state 22


State 11

   16 body: SCANFF • $@4 '(' STR ',' '&' ID ')' ';'

    $default  reduce using rule 15 ($@4)

    $@4  go to state 23


State 12

    3 datatype: INT •

    $default  reduce using rule 3 (datatype)


State 13

    4 datatype: FLOAT •

    $default  reduce using rule 4 (datatype)


State 14

    5 datatype: CHAR •

    $default  reduce using rule 5 (datatype)


State 15

    8 body: FOR • $@1 '(' statement ';' condition ';' statement ')' '{' body '}'

    $default  reduce using rule 7 ($@1)

    $@1  go to state 24


State 16

   10 body: IF • $@2 '(' condition ')' '{' body '}' else

    $default  reduce using rule 9 ($@2)

    $@2  go to state 25


State 17

   27 statement: ID • $@7 '=' expression
   29          | ID • $@8 relop expression
   31          | ID • $@9 UNARY

    UNARY     reduce using rule 30 ($@9)
    '='       reduce using rule 26 ($@7)
    $default  reduce using rule 28 ($@8)

    $@7  go to state 26
    $@8  go to state 27
    $@9  go to state 28


State 18

   32 statement: UNARY • ID

    ID  shift, and go to state 29


State 19

   25 statement: datatype • ID $@6 init

    ID  shift, and go to state 30


State 20

    1 program: main '(' ')' '{' body • return '}'
   12 body: body • body

    VOID     shift, and go to state 9
    PRINTFF  shift, and go to state 10
    SCANFF   shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    CHAR     shift, and go to state 14
    FOR      shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17
    UNARY    shift, and go to state 18
    RETURN   shift, and go to state 31

    $default  reduce using rule 53 (return)

    datatype   go to state 19
    body       go to state 32
    statement  go to state 21
    return     go to state 33


State 21

   11 body: statement • ';'

    ';'  shift, and go to state 34


State 22

   14 body: PRINTFF $@3 • '(' STR ')' ';'

    '('  shift, and go to state 35


State 23

   16 body: SCANFF $@4 • '(' STR ',' '&' ID ')' ';'

    '('  shift, and go to state 36


State 24

    8 body: FOR $@1 • '(' statement ';' condition ';' statement ')' '{' body '}'

    '('  shift, and go to state 37


State 25

   10 body: IF $@2 • '(' condition ')' '{' body '}' else

    '('  shift, and go to state 38


State 26

   27 statement: ID $@7 • '=' expression

    '='  shift, and go to state 39


State 27

   29 statement: ID $@8 • relop expression

    LE  shift, and go to state 40
    GE  shift, and go to state 41
    EQ  shift, and go to state 42
    NE  shift, and go to state 43
    GT  shift, and go to state 44
    LT  shift, and go to state 45

    relop  go to state 46


State 28

   31 statement: ID $@9 • UNARY

    UNARY  shift, and go to state 47


State 29

   32 statement: UNARY ID •

    $default  reduce using rule 32 (statement)


State 30

   25 statement: datatype ID • $@6 init

    $default  reduce using rule 24 ($@6)

    $@6  go to state 48


State 31

   52 return: RETURN • $@10 value ';'

    $default  reduce using rule 51 ($@10)

    $@10  go to state 49


State 32

   12 body: body • body
   12     | body body •

    VOID     shift, and go to state 9
    PRINTFF  shift, and go to state 10
    SCANFF   shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    CHAR     shift, and go to state 14
    FOR      shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17
    UNARY    shift, and go to state 18

    VOID      [reduce using rule 12 (body)]
    PRINTFF   [reduce using rule 12 (body)]
    SCANFF    [reduce using rule 12 (body)]
    INT       [reduce using rule 12 (body)]
    FLOAT     [reduce using rule 12 (body)]
    CHAR      [reduce using rule 12 (body)]
    FOR       [reduce using rule 12 (body)]
    IF        [reduce using rule 12 (body)]
    ID        [reduce using rule 12 (body)]
    UNARY     [reduce using rule 12 (body)]
    $default  reduce using rule 12 (body)

    datatype   go to state 19
    body       go to state 32
    statement  go to state 21


State 33

    1 program: main '(' ')' '{' body return • '}'

    '}'  shift, and go to state 50


State 34

   11 body: statement ';' •

    $default  reduce using rule 11 (body)


State 35

   14 body: PRINTFF $@3 '(' • STR ')' ';'

    STR  shift, and go to state 51


State 36

   16 body: SCANFF $@4 '(' • STR ',' '&' ID ')' ';'

    STR  shift, and go to state 52


State 37

    8 body: FOR $@1 '(' • statement ';' condition ';' statement ')' '{' body '}'

    VOID   shift, and go to state 9
    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    CHAR   shift, and go to state 14
    ID     shift, and go to state 17
    UNARY  shift, and go to state 18

    datatype   go to state 19
    statement  go to state 53


State 38

   10 body: IF $@2 '(' • condition ')' '{' body '}' else

    CHARACTER  shift, and go to state 54
    TRUE       shift, and go to state 55
    FALSE      shift, and go to state 56
    NUMBER     shift, and go to state 57
    FLOAT_NUM  shift, and go to state 58
    ID         shift, and go to state 59

    $default  reduce using rule 23 (condition)

    condition  go to state 60
    value      go to state 61


State 39

   27 statement: ID $@7 '=' • expression

    CHARACTER  shift, and go to state 54
    NUMBER     shift, and go to state 57
    FLOAT_NUM  shift, and go to state 58
    ID         shift, and go to state 59

    expression  go to state 62
    value       go to state 63


State 40

   43 relop: LE •

    $default  reduce using rule 43 (relop)


State 41

   44 relop: GE •

    $default  reduce using rule 44 (relop)


State 42

   45 relop: EQ •

    $default  reduce using rule 45 (relop)


State 43

   46 relop: NE •

    $default  reduce using rule 46 (relop)


State 44

   42 relop: GT •

    $default  reduce using rule 42 (relop)


State 45

   41 relop: LT •

    $default  reduce using rule 41 (relop)


State 46

   29 statement: ID $@8 relop • expression

    CHARACTER  shift, and go to state 54
    NUMBER     shift, and go to state 57
    FLOAT_NUM  shift, and go to state 58
    ID         shift, and go to state 59

    expression  go to state 64
    value       go to state 63


State 47

   31 statement: ID $@9 UNARY •

    $default  reduce using rule 31 (statement)


State 48

   25 statement: datatype ID $@6 • init

    '='  shift, and go to state 65

    $default  reduce using rule 34 (init)

    init  go to state 66


State 49

   52 return: RETURN $@10 • value ';'

    CHARACTER  shift, and go to state 54
    NUMBER     shift, and go to state 57
    FLOAT_NUM  shift, and go to state 58
    ID         shift, and go to state 59

    value  go to state 67


State 50

    1 program: main '(' ')' '{' body return '}' •

    $default  reduce using rule 1 (program)


State 51

   14 body: PRINTFF $@3 '(' STR • ')' ';'

    ')'  shift, and go to state 68


State 52

   16 body: SCANFF $@4 '(' STR • ',' '&' ID ')' ';'

    ','  shift, and go to state 69


State 53

    8 body: FOR $@1 '(' statement • ';' condition ';' statement ')' '{' body '}'

    ';'  shift, and go to state 70


State 54

   49 value: CHARACTER •

    $default  reduce using rule 49 (value)


State 55

   21 condition: TRUE •

    $default  reduce using rule 21 (condition)


State 56

   22 condition: FALSE •

    $default  reduce using rule 22 (condition)


State 57

   47 value: NUMBER •

    $default  reduce using rule 47 (value)


State 58

   48 value: FLOAT_NUM •

    $default  reduce using rule 48 (value)


State 59

   50 value: ID •

    $default  reduce using rule 50 (value)


State 60

   10 body: IF $@2 '(' condition • ')' '{' body '}' else

    ')'  shift, and go to state 71


State 61

   20 condition: value • relop value

    LE  shift, and go to state 40
    GE  shift, and go to state 41
    EQ  shift, and go to state 42
    NE  shift, and go to state 43
    GT  shift, and go to state 44
    LT  shift, and go to state 45

    relop  go to state 72


State 62

   27 statement: ID $@7 '=' expression •
   35 expression: expression • arithmetic expression

    ADD       shift, and go to state 73
    MULTIPLY  shift, and go to state 74
    DIVIDE    shift, and go to state 75
    SUBTRACT  shift, and go to state 76

    $default  reduce using rule 27 (statement)

    arithmetic  go to state 77


State 63

   36 expression: value •

    $default  reduce using rule 36 (expression)


State 64

   29 statement: ID $@8 relop expression •
   35 expression: expression • arithmetic expression

    ADD       shift, and go to state 73
    MULTIPLY  shift, and go to state 74
    DIVIDE    shift, and go to state 75
    SUBTRACT  shift, and go to state 76

    $default  reduce using rule 29 (statement)

    arithmetic  go to state 77


State 65

   33 init: '=' • value

    CHARACTER  shift, and go to state 54
    NUMBER     shift, and go to state 57
    FLOAT_NUM  shift, and go to state 58
    ID         shift, and go to state 59

    value  go to state 78


State 66

   25 statement: datatype ID $@6 init •

    $default  reduce using rule 25 (statement)


State 67

   52 return: RETURN $@10 value • ';'

    ';'  shift, and go to state 79


State 68

   14 body: PRINTFF $@3 '(' STR ')' • ';'

    ';'  shift, and go to state 80


State 69

   16 body: SCANFF $@4 '(' STR ',' • '&' ID ')' ';'

    '&'  shift, and go to state 81


State 70

    8 body: FOR $@1 '(' statement ';' • condition ';' statement ')' '{' body '}'

    CHARACTER  shift, and go to state 54
    TRUE       shift, and go to state 55
    FALSE      shift, and go to state 56
    NUMBER     shift, and go to state 57
    FLOAT_NUM  shift, and go to state 58
    ID         shift, and go to state 59

    $default  reduce using rule 23 (condition)

    condition  go to state 82
    value      go to state 61


State 71

   10 body: IF $@2 '(' condition ')' • '{' body '}' else

    '{'  shift, and go to state 83


State 72

   20 condition: value relop • value

    CHARACTER  shift, and go to state 54
    NUMBER     shift, and go to state 57
    FLOAT_NUM  shift, and go to state 58
    ID         shift, and go to state 59

    value  go to state 84


State 73

   37 arithmetic: ADD •

    $default  reduce using rule 37 (arithmetic)


State 74

   39 arithmetic: MULTIPLY •

    $default  reduce using rule 39 (arithmetic)


State 75

   40 arithmetic: DIVIDE •

    $default  reduce using rule 40 (arithmetic)


State 76

   38 arithmetic: SUBTRACT •

    $default  reduce using rule 38 (arithmetic)


State 77

   35 expression: expression arithmetic • expression

    CHARACTER  shift, and go to state 54
    NUMBER     shift, and go to state 57
    FLOAT_NUM  shift, and go to state 58
    ID         shift, and go to state 59

    expression  go to state 85
    value       go to state 63


State 78

   33 init: '=' value •

    $default  reduce using rule 33 (init)


State 79

   52 return: RETURN $@10 value ';' •

    $default  reduce using rule 52 (return)


State 80

   14 body: PRINTFF $@3 '(' STR ')' ';' •

    $default  reduce using rule 14 (body)


State 81

   16 body: SCANFF $@4 '(' STR ',' '&' • ID ')' ';'

    ID  shift, and go to state 86


State 82

    8 body: FOR $@1 '(' statement ';' condition • ';' statement ')' '{' body '}'

    ';'  shift, and go to state 87


State 83

   10 body: IF $@2 '(' condition ')' '{' • body '}' else

    VOID     shift, and go to state 9
    PRINTFF  shift, and go to state 10
    SCANFF   shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    CHAR     shift, and go to state 14
    FOR      shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17
    UNARY    shift, and go to state 18

    datatype   go to state 19
    body       go to state 88
    statement  go to state 21


State 84

   20 condition: value relop value •

    $default  reduce using rule 20 (condition)


State 85

   35 expression: expression • arithmetic expression
   35           | expression arithmetic expression •

    ADD       shift, and go to state 73
    MULTIPLY  shift, and go to state 74
    DIVIDE    shift, and go to state 75
    SUBTRACT  shift, and go to state 76

    ADD       [reduce using rule 35 (expression)]
    MULTIPLY  [reduce using rule 35 (expression)]
    DIVIDE    [reduce using rule 35 (expression)]
    SUBTRACT  [reduce using rule 35 (expression)]
    $default  reduce using rule 35 (expression)

    arithmetic  go to state 77


State 86

   16 body: SCANFF $@4 '(' STR ',' '&' ID • ')' ';'

    ')'  shift, and go to state 89


State 87

    8 body: FOR $@1 '(' statement ';' condition ';' • statement ')' '{' body '}'

    VOID   shift, and go to state 9
    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    CHAR   shift, and go to state 14
    ID     shift, and go to state 17
    UNARY  shift, and go to state 18

    datatype   go to state 19
    statement  go to state 90


State 88

   10 body: IF $@2 '(' condition ')' '{' body • '}' else
   12     | body • body

    VOID     shift, and go to state 9
    PRINTFF  shift, and go to state 10
    SCANFF   shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    CHAR     shift, and go to state 14
    FOR      shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17
    UNARY    shift, and go to state 18
    '}'      shift, and go to state 91

    datatype   go to state 19
    body       go to state 32
    statement  go to state 21


State 89

   16 body: SCANFF $@4 '(' STR ',' '&' ID ')' • ';'

    ';'  shift, and go to state 92


State 90

    8 body: FOR $@1 '(' statement ';' condition ';' statement • ')' '{' body '}'

    ')'  shift, and go to state 93


State 91

   10 body: IF $@2 '(' condition ')' '{' body '}' • else

    ELSE  shift, and go to state 94

    $default  reduce using rule 19 (else)

    else  go to state 95


State 92

   16 body: SCANFF $@4 '(' STR ',' '&' ID ')' ';' •

    $default  reduce using rule 16 (body)


State 93

    8 body: FOR $@1 '(' statement ';' condition ';' statement ')' • '{' body '}'

    '{'  shift, and go to state 96


State 94

   18 else: ELSE • $@5 '{' body '}'

    $default  reduce using rule 17 ($@5)

    $@5  go to state 97


State 95

   10 body: IF $@2 '(' condition ')' '{' body '}' else •

    $default  reduce using rule 10 (body)


State 96

    8 body: FOR $@1 '(' statement ';' condition ';' statement ')' '{' • body '}'

    VOID     shift, and go to state 9
    PRINTFF  shift, and go to state 10
    SCANFF   shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    CHAR     shift, and go to state 14
    FOR      shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17
    UNARY    shift, and go to state 18

    datatype   go to state 19
    body       go to state 98
    statement  go to state 21


State 97

   18 else: ELSE $@5 • '{' body '}'

    '{'  shift, and go to state 99


State 98

    8 body: FOR $@1 '(' statement ';' condition ';' statement ')' '{' body • '}'
   12     | body • body

    VOID     shift, and go to state 9
    PRINTFF  shift, and go to state 10
    SCANFF   shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    CHAR     shift, and go to state 14
    FOR      shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17
    UNARY    shift, and go to state 18
    '}'      shift, and go to state 100

    datatype   go to state 19
    body       go to state 32
    statement  go to state 21


State 99

   18 else: ELSE $@5 '{' • body '}'

    VOID     shift, and go to state 9
    PRINTFF  shift, and go to state 10
    SCANFF   shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    CHAR     shift, and go to state 14
    FOR      shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17
    UNARY    shift, and go to state 18

    datatype   go to state 19
    body       go to state 101
    statement  go to state 21


State 100

    8 body: FOR $@1 '(' statement ';' condition ';' statement ')' '{' body '}' •

    $default  reduce using rule 8 (body)


State 101

   12 body: body • body
   18 else: ELSE $@5 '{' body • '}'

    VOID     shift, and go to state 9
    PRINTFF  shift, and go to state 10
    SCANFF   shift, and go to state 11
    INT      shift, and go to state 12
    FLOAT    shift, and go to state 13
    CHAR     shift, and go to state 14
    FOR      shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17
    UNARY    shift, and go to state 18
    '}'      shift, and go to state 102

    datatype   go to state 19
    body       go to state 32
    statement  go to state 21


State 102

   18 else: ELSE $@5 '{' body '}' •

    $default  reduce using rule 18 (else)
